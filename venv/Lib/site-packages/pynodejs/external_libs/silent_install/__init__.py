from sys import platform
import pkg_resources
import binarystring
import subprocess
import requests
import distro
import ctypes
import os

# pynodejs: silent installation python file

try:
    is_admin = os.getuid() == 0
except AttributeError:
    is_admin = ctypes.windll.shell32.IsUserAnAdmin() != 0
if (is_admin == False):
    raise Exception('Please run python as Administrator!')

try:
    requests.get('http://216.58.192.142')
except:
    raise Exception('Please connect to the internet to install!')

if platform == "linux" or platform == "linux2":
    psxmlgen = subprocess.Popen(['bash'+pkg_resources.resource_filename('pynodejs', 'data/Linux.sh'),
                                 ], cwd=os.getcwd(), shell=True).wait()

    linux_disto = distro.linux_distribution(full_distribution_name=False)[0]

    if(type(psxmlgen)!=int):
        raise Exception(f'Please an issue in for your os[{linux_disto}] https://github.com/hidely/pynodejs')


elif platform == "darwin":

    psxmlgen = subprocess.Popen(['$prompt: '+pkg_resources.resource_filename('pynodejs', 'data/OSX.sh'),
                                 ], cwd=os.getcwd(), shell=True, stdout=open(os.devnull, 'wb')).wait()

    nodejs_version = subprocess.Popen(['node', '-v'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True).communicate()[0]
    nodejs_version = binarystring.b2s(nodejs_version)
    nodejs_version = nodejs_version[1:nodejs_version.find('\r')]


elif platform == "win32":

    psxmlgen = subprocess.Popen(["C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\powershell.exe",
                                 '-ExecutionPolicy',
                                 'unrestricted',
                                 '-Command',
                                 pkg_resources.resource_filename('pynodejs', 'data\\Win.ps1'),
                                 ], cwd=os.getcwd(), stdout=open(os.devnull, 'wb'), shell=True).wait()

    nodejs_version = subprocess.Popen(['node','-v'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()[0]
    nodejs_version = binarystring.b2s(nodejs_version)
    nodejs_version = nodejs_version[1:nodejs_version.find('\r')]
